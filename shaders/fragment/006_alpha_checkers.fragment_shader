#define v2 vec2
#define v3 vec3
#define v4 vec4
#define f32 float
#define s32 int
#define b32 bool
#define m2 mat2
#define TAU 6.283185307179586
#define DEG_TO_RAD (TAU / 360.0)
#define zero_v2 vec2(0,0)

out v4 out_color;

uniform float iTime;
uniform v2 iResolution;
uniform v4 iMouse;

v2 aspect;

v2 to_uv(in v2 p) {
    return (((2. * p) / iResolution) - 1.) * aspect;
}

void main() {
    out_color.rgba = v4(1,1,1,1);
    aspect = v2(1, iResolution.y / iResolution.x);

    v2 uv = gl_FragCoord.xy / iResolution;
    uv.x *= iResolution.x / iResolution.y;

    v2 tiled = uv / .04;
    b32 x_on = s32(tiled.x + s32(tiled.y)) % 2 == 0;

    if(x_on) {
        out_color.rgb *= .8;
    }
}

